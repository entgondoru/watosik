using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Watosik.Application.Scoring
{
    public static class SwimmingScoring
    {
        public static int GetPoints(string category, string gender, int distance)
        {
            var scoringTable = gender == "Male" ? Male : Female;

            if (!scoringTable.ContainsKey(category))
            {
                throw new ArgumentException($"Category '{category}' does not exist.", nameof(category));
            }

            var categoryTable = scoringTable[category];
            var closestElement = categoryTable
                .OrderBy(s => Math.Abs(s.Distance - distance))
                .FirstOrDefault();

            return closestElement.Points;
        }

        // Scoring table for men based on age categories
        public static readonly Dictionary<string, List<(int Distance, int Points)>> Male = new()
        {
            { "do 20", new List<(int Distance, int Points)>
                {
                    (650, 44), (640, 44), (630, 43), (620, 43), (610, 42),
                    (600, 42), (590, 41), (580, 41), (570, 40), (560, 40),
                    (550, 39), (540, 39), (530, 38), (520, 38), (510, 37),
                    (500, 37), (490, 36), (480, 36), (470, 35), (460, 35),
                    (450, 34), (440, 34), (430, 33), (420, 33), (410, 32),
                    (400, 32), (390, 31), (380, 31), (370, 30), (360, 30),
                    (350, 29), (340, 29), (330, 28), (320, 28), (310, 27),
                    (300, 27), (290, 26), (280, 26)
                }
            },

            { "21-25", new List<(int Distance, int Points)>
                {
                    (650, 44), (640, 43), (630, 43), (620, 42), (610, 42),
                    (600, 41), (590, 41), (580, 40), (570, 40), (560, 39),
                    (550, 39), (540, 38), (530, 38), (520, 37), (510, 37),
                    (500, 36), (490, 36), (480, 35), (470, 35), (460, 34),
                    (450, 34), (440, 33), (430, 33), (420, 32), (410, 32),
                    (400, 31), (390, 31), (380, 30), (370, 30), (360, 29),
                    (350, 29), (340, 28), (330, 28), (320, 27), (310, 27),
                    (300, 26), (290, 26), (280, 25)
                }
            },

            { "26-30", new List<(int Distance, int Points)>
                {
                    (650, 44), (640, 43), (630, 43), (620, 42), (610, 42),
                    (600, 41), (590, 40), (580, 40), (570, 39), (560, 39),
                    (550, 38), (540, 38), (530, 37), (520, 37), (510, 36),
                    (500, 36), (490, 35), (480, 35), (470, 34), (460, 34),
                    (450, 33), (440, 33), (430, 32), (420, 32), (410, 31),
                    (400, 31), (390, 30), (380, 30), (370, 29), (360, 29),
                    (350, 28), (340, 28), (330, 27), (320, 27), (310, 26),
                    (300, 26), (290, 25), (280, 25)
                }
            }
        };
        public static readonly Dictionary<string, List<(int Distance, int Points)>> Female = new()
{
    { "do 20", new List<(int Distance, int Points)>
        {
            (575, 44), (570, 43), (565, 43), (560, 42), (555, 42),
            (550, 41), (545, 41), (540, 40), (535, 40), (530, 39),
            (525, 39), (520, 38), (515, 38), (510, 37), (505, 37),
            (500, 36), (495, 36), (490, 35), (485, 35), (480, 34),
            (475, 34), (470, 33), (465, 33), (460, 32), (455, 32),
            (450, 31), (445, 31), (440, 30), (435, 30), (430, 29),
            (425, 29), (420, 28), (415, 28), (410, 27), (405, 27),
            (400, 26), (395, 26), (390, 25), (385, 25)
        }
    },
    { "21-25", new List<(int Distance, int Points)>
        {
            (575, 44), (570, 43), (565, 43), (560, 42), (555, 42),
            (550, 41), (545, 41), (540, 40), (535, 40), (530, 39),
            (525, 39), (520, 38), (515, 38), (510, 37), (505, 37),
            (500, 36), (495, 36), (490, 35), (485, 35), (480, 34),
            (475, 34), (470, 33), (465, 33), (460, 32), (455, 32),
            (450, 31), (445, 31), (440, 30), (435, 30), (430, 29),
            (425, 29), (420, 28), (415, 28), (410, 27), (405, 27),
            (400, 26), (395, 26), (390, 25), (385, 25)
        }
    },
    { "26-30", new List<(int Distance, int Points)>
        {
            (575, 44), (570, 43), (565, 43), (560, 42), (555, 42),
            (550, 41), (545, 41), (540, 40), (535, 40), (530, 39),
            (525, 39), (520, 38), (515, 38), (510, 37), (505, 37),
            (500, 36), (495, 36), (490, 35), (485, 35), (480, 34),
            (475, 34), (470, 33), (465, 33), (460, 32), (455, 32),
            (450, 31), (445, 31), (440, 30), (435, 30), (430, 29),
            (425, 29), (420, 28), (415, 28), (410, 27), (405, 27),
            (400, 26), (395, 26), (390, 25), (385, 25)
        }
    }
};

    }
}
